; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--split_sections --debug -c -S -o..\obj\calc.s --depend=..\obj\calc.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\HARDWARE\LED -I..\HARDWARE\BEEP -I..\HARDWARE\KEY -I..\HARDWARE\EXTI -I..\HARDWARE\WDG -I..\HARDWARE\TIMER -I..\HARDWARE\TPAD -I..\HARDWARE\OLED -I..\HARDWARE\LCD -I..\HARDWARE\RTC -I..\HARDWARE\WKUP -I..\HARDWARE\ADC -I..\HARDWARE\LSENS -I..\HARDWARE\DAC -I..\HARDWARE\DMA -I..\HARDWARE\24CXX -I..\HARDWARE\SPI -I..\HARDWARE\W25QXX -I..\HARDWARE\RS485 -I..\HARDWARE\CAN -I..\HARDWARE\TOUCH -I..\HARDWARE\REMOTE -I..\HARDWARE\JOYPAD -I..\HARDWARE\DS18B20 -I..\HARDWARE\DHT11 -I..\HARDWARE\MPU6050 -I..\HARDWARE\MPU6050\eMPL -I..\HARDWARE\NRF24L01 -I..\HARDWARE\STMFLASH -I..\HARDWARE\OV7725 -I..\HARDWARE\SRAM -I..\HARDWARE\SDIO -I..\HARDWARE\SPBLCD -I..\HARDWARE\USART3 -I..\HARDWARE\SIM900A -I..\FATFS\src -I..\FATFS\exfuns -I..\USMART -I..\MALLOC -I..\TEXT -I..\PICTURE -I..\APP -I..\UCOSII\CORE -I..\UCOSII\PORT -I..\UCOSII\CONFIG -I..\GUI -I..\T9INPUT -I..\ATKNCR -I..\USB\CONFIG -I..\USB\STM32_USB-FS-Device_Driver\inc -I..\BACKGROUND -I..\MENU -I..\COLORSET -I..\SIMPLESYS -I..\TIMESET -I..\NEWTOU -I..\TIME -I..\DRAW -I..\calc -I..\DRAWCALC -I..\PICTUREDRAW -I.\RTE\_Target_1 -IC:\Users\12695\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=529 -DSTM32F10X_HD -DSTM32F10X_HD ..\CALC\calc.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.Newtown||, CODE, READONLY, ALIGN=2

Newtown PROC
        PUSH     {r0-r12,lr}
        SUB      sp,sp,#8
        MOV      r4,r2
        MOV      r5,r3
        LDRD     r10,r11,[sp,#0x40]
        MOV      r2,r4
        MOV      r3,r5
        LDR      r0,[sp,#8]
        BL       eval_safe
        MOV      r6,r0
        MOV      r7,r1
        MOV      r2,r10
        MOV      r3,r11
        MOV      r0,r4
        MOV      r1,r5
        BL       __aeabi_dsub
        MOV      r2,#0xa0000000
        LDR      r3,|L0.184|
        STRD     r0,r1,[sp,#0]
        BL       __aeabi_cdcmple
        BCS      |L0.136|
        MOV      r2,r4
        MOV      r3,r5
        MOV      r0,r10
        MOV      r1,r11
        BL       __aeabi_dsub
        MOV      r2,#0xa0000000
        LDR      r3,|L0.184|
        STRD     r0,r1,[sp,#0]
        BL       __aeabi_cdcmple
        BCS      |L0.136|
        LDR      r2,|L0.188|
        LDR      r3,|L0.192|
        MOV      r0,r6
        MOV      r1,r7
        BL       __aeabi_cdcmple
        BCS      |L0.136|
        EOR      r0,r7,#0x80000000
        LDR      r2,|L0.188|
        LDR      r3,|L0.192|
        STRD     r6,r0,[sp,#0]
        MOV      r0,r6
        LDR      r1,[sp,#4]
        BL       __aeabi_cdcmple
        BCS      |L0.136|
        MOVS     r0,#1
        LDR      r1,|L0.196|
        STRB     r0,[r1,#0]
        MOV      r0,r4
        MOV      r1,r5
|L0.130|
        ADD      sp,sp,#0x18
        POP      {r4-r12,pc}
|L0.136|
        MOV      r2,r4
        MOV      r3,r5
        LDR      r0,[sp,#8]
        BL       df_eval
        MOV      r8,r0
        MOV      r9,r1
        MOV      r2,r8
        MOV      r3,r9
        MOV      r0,r6
        MOV      r1,r7
        BL       __aeabi_ddiv
        MOV      r2,r4
        MOV      r3,r5
        STRD     r0,r1,[sp,#0]
        BL       __aeabi_drsub
        MOV      r4,r0
        MOV      r5,r1
        MOV      r0,r4
        MOV      r1,r5
        B        |L0.130|
        ENDP

|L0.184|
        DCD      0x3eb0c6f7
|L0.188|
        DCD      0x812dea11
|L0.192|
        DCD      0x3d719799
|L0.196|
        DCD      Newtown_outflag

        AREA ||i.Newtown_5||, CODE, READONLY, ALIGN=2

Newtown_5 PROC
        PUSH     {r2-r12,lr}
        MOV      r11,r0
        MOV      r4,r2
        MOV      r5,r3
        LDRD     r8,r9,[sp,#0x30]
        MOV      r10,#0
        MOVS     r0,#0
        LDR      r1,|L1.124|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.128|
        STRB     r0,[r1,#0]
        MOV      r6,r4
        MOV      r7,r5
        MOV      r2,r4
        MOV      r3,r5
        MOV      r0,r11
        STRD     r8,r9,[sp,#0]
        BL       Newtown
        MOV      r4,r0
        MOV      r5,r1
        MOV      r8,r6
        MOV      r9,r7
        NOP      
        B        |L1.98|
|L1.58|
        LDR      r0,|L1.124|
        LDRB     r0,[r0,#0]  ; Newtown_outflag
        CBNZ     r0,|L1.90|
        MOV      r6,r4
        MOV      r7,r5
        MOV      r2,r6
        MOV      r3,r5
        MOV      r0,r11
        STRD     r8,r9,[sp,#0]
        BL       Newtown
        MOV      r4,r0
        MOV      r5,r1
        MOV      r8,r6
        MOV      r9,r7
|L1.90|
        ADD      r0,r10,#1
        AND      r10,r0,#0xff
|L1.98|
        CMP      r10,#0x64
        BLT      |L1.58|
        LDR      r0,|L1.124|
        LDRB     r0,[r0,#0]  ; Newtown_outflag
        CBNZ     r0,|L1.116|
        MOVS     r0,#1
        LDR      r1,|L1.128|
        STRB     r0,[r1,#0]
|L1.116|
        MOV      r0,r4
        MOV      r1,r5
        POP      {r2-r12,pc}
        ENDP

|L1.124|
        DCD      Newtown_outflag
|L1.128|
        DCD      calc_error_flag

        AREA ||i.calc||, CODE, READONLY, ALIGN=2

calc PROC
        PUSH     {r0-r12,lr}
        MOV      r8,r0
        MOV      r9,r1
        MOV      r10,r2
        LDRD     r6,r7,[sp,#0x38]
        MOVS     r1,#0
        MOV      r4,r1
        MOV      r5,r1
        CMP      r10,#0x63
        BEQ      |L2.250|
        BGT      |L2.64|
        CMP      r10,#0x2b
        BEQ      |L2.100|
        BGT      |L2.50|
        CMP      r10,#0x25
        BEQ      |L2.192|
        CMP      r10,#0x2a
|L2.46|
        BNE      |L2.116|
        B        |L2.136|
|L2.50|
        CMP      r10,#0x2d
        BEQ      |L2.118|
        CMP      r10,#0x2f
        BNE      |L2.46|
        B        |L2.154|
|L2.64|
        CMP      r10,#0x73
        BEQ      |L2.322|
        BGT      |L2.86|
        CMP      r10,#0x6c
        BEQ      |L2.270|
        CMP      r10,#0x70
        BNE      |L2.46|
        B        |L2.252|
|L2.86|
        CMP      r10,#0x74
        BEQ      |L2.324|
        CMP      r10,#0x78
        BNE      |L2.46|
        B        |L2.390|
|L2.100|
        MOV      r2,r6
        MOV      r3,r7
        MOV      r0,r8
        MOV      r1,r9
        BL       __aeabi_dadd
        MOV      r4,r0
        MOV      r5,r1
|L2.116|
        B        |L2.396|
|L2.118|
        MOV      r2,r6
        MOV      r3,r7
        MOV      r0,r8
        MOV      r1,r9
        BL       __aeabi_dsub
        MOV      r4,r0
        MOV      r5,r1
        B        |L2.396|
|L2.136|
        MOV      r2,r6
        MOV      r3,r7
        MOV      r0,r8
        MOV      r1,r9
        BL       __aeabi_dmul
        MOV      r4,r0
        MOV      r5,r1
        B        |L2.396|
|L2.154|
        MOVS     r2,#0
        MOV      r3,r2
        MOV      r0,r6
        MOV      r1,r7
        BL       __aeabi_cdcmpeq
        BNE      |L2.174|
        MOVS     r0,#1
        LDR      r1,|L2.408|
        STRB     r0,[r1,#0]
|L2.174|
        MOV      r2,r6
        MOV      r3,r7
        MOV      r0,r8
        MOV      r1,r9
        BL       __aeabi_ddiv
        MOV      r4,r0
        MOV      r5,r1
        B        |L2.396|
|L2.192|
        MOVS     r2,#0
        MOV      r3,r2
        MOV      r0,r6
        MOV      r1,r7
        BL       __aeabi_cdcmpeq
        BNE      |L2.212|
        MOVS     r0,#1
        LDR      r1,|L2.408|
        STRB     r0,[r1,#0]
|L2.212|
        MOV      r0,r8
        MOV      r1,r9
        BL       __aeabi_d2iz
        MOV      r11,r0
        MOV      r0,r6
        MOV      r1,r7
        BL       __aeabi_d2iz
        SDIV     r1,r11,r0
        MLS      r0,r0,r1,r11
        STR      r0,[sp,#0xc]
        BL       __aeabi_i2d
        MOV      r4,r0
        MOV      r5,r1
        B        |L2.396|
|L2.250|
        B        |L2.348|
|L2.252|
        MOV      r2,r6
        MOV      r3,r7
        MOV      r0,r8
        MOV      r1,r9
        BL       pow
        MOV      r4,r0
        MOV      r5,r1
        B        |L2.396|
|L2.270|
        MOVS     r2,#0
        MOV      r3,r2
        MOV      r0,r8
        MOV      r1,r9
        BL       __aeabi_cdcmple
        BLS      |L2.298|
        MOVS     r2,#0
        MOV      r3,r2
        MOV      r0,r6
        MOV      r1,r7
        BL       __aeabi_cdcmple
        BHI      |L2.304|
|L2.298|
        MOVS     r0,#1
        LDR      r1,|L2.408|
        STRB     r0,[r1,#0]
|L2.304|
        MOV      r0,r8
        MOV      r1,r9
        BL       log
        STRD     r0,r1,[sp,#8]
        MOV      r0,r6
        MOV      r1,r7
        B        |L2.326|
|L2.322|
        B        |L2.362|
|L2.324|
        B        |L2.376|
|L2.326|
        BL       log
        STRD     r0,r1,[sp,#0]
        LDRD     r2,r3,[sp,#8]
        BL       __aeabi_ddiv
        MOV      r4,r0
        MOV      r5,r1
        B        |L2.396|
|L2.348|
        MOV      r0,r6
        MOV      r1,r7
        BL       ||cos||
        MOV      r4,r0
        MOV      r5,r1
        B        |L2.396|
|L2.362|
        MOV      r0,r6
        MOV      r1,r7
        BL       ||sin||
        MOV      r4,r0
        MOV      r5,r1
        B        |L2.396|
|L2.376|
        MOV      r0,r6
        MOV      r1,r7
        BL       tan
        MOV      r4,r0
        MOV      r5,r1
        B        |L2.396|
|L2.390|
        LDRD     r4,r5,[sp,#0x40]
        NOP      
|L2.396|
        NOP      
        MOV      r0,r4
        MOV      r1,r5
        ADD      sp,sp,#0x10
        POP      {r4-r12,pc}
        ENDP

|L2.408|
        DCD      calc_error_flag

        AREA ||i.df_eval||, CODE, READONLY, ALIGN=2

df_eval PROC
        PUSH     {r0-r12,lr}
        MOV      r4,r2
        MOV      r5,r3
        LDR      r2,|L3.80|
        LDR      r3,|L3.84|
        MOV      r0,r4
        MOV      r1,r5
        BL       __aeabi_dadd
        MOV      r6,r0
        MOV      r2,r6
        MOV      r3,r1
        LDR      r0,[sp,#0]
        BL       eval_safe
        MOV      r8,r0
        MOV      r9,r1
        MOV      r2,r4
        MOV      r3,r5
        LDR      r0,[sp,#0]
        BL       eval_safe
        MOV      r10,r0
        MOV      r11,r1
        MOV      r2,r10
        MOV      r3,r11
        MOV      r0,r8
        MOV      r1,r9
        BL       __aeabi_dsub
        MOV      r6,r0
        LDR      r2,|L3.80|
        LDR      r3,|L3.84|
        BL       __aeabi_ddiv
        ADD      sp,sp,#0x10
        POP      {r4-r12,pc}
        ENDP

        DCW      0x0000
|L3.80|
        DCD      0xd9d7bdbb
|L3.84|
        DCD      0x3ddb7cdf

        AREA ||i.eval||, CODE, READONLY, ALIGN=1

eval PROC
        PUSH     {r4-r11,lr}
        SUB      sp,sp,#0x14
        MOV      r4,r0
        MOV      r5,r2
        MOV      r6,r3
        NOP      
        NOP      
        NOP      
        MOV      r0,r4
        BL       findop
        MOV      r7,r0
        ADDS     r0,r7,#2
        CBNZ     r0,|L4.66|
        MOVS     r0,#0
        STR      r0,[sp,#0x10]
        MOV      r0,r4
        BL       strlen
        STR      r0,[sp,#0x10]
        MOVS     r1,#0
        LDR      r0,[sp,#0x10]
        SUBS     r0,r0,#1
        STRB     r1,[r4,r0]
        MOV      r2,r5
        MOV      r3,r6
        ADDS     r0,r4,#1
        BL       eval
|L4.60|
        ADD      sp,sp,#0x14
        POP      {r4-r11,pc}
|L4.66|
        ADDS     r0,r7,#1
        CBNZ     r0,|L4.78|
        MOV      r0,r4
        BL       str2db
        B        |L4.60|
|L4.78|
        LDRB     r0,[r4,r7]
        STR      r0,[sp,#0x10]
        MOVS     r0,#0
        STRB     r0,[r4,r7]
        MOV      r2,r5
        MOV      r3,r6
        MOV      r0,r4
        BL       eval
        MOV      r10,r0
        MOV      r11,r1
        ADDS     r1,r4,r7
        ADDS     r0,r1,#1
        MOV      r2,r5
        MOV      r3,r6
        BL       eval
        MOV      r8,r0
        MOV      r9,r1
        STRD     r8,r9,[sp,#0]
        STRD     r5,r6,[sp,#8]
        MOV      r0,r10
        MOV      r1,r11
        LDR      r2,[sp,#0x10]
        BL       calc
        B        |L4.60|
        ENDP


        AREA ||i.eval_safe||, CODE, READONLY, ALIGN=2

eval_safe PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r4,r2
        MOV      r5,r3
        MOV      r1,r6
        LDR      r0,|L5.36|
        BL       strcpy
        MOV      r2,r4
        MOV      r3,r5
        LDR      r0,|L5.36|
        BL       eval
        MOV      r4,r0
        MOV      r5,r1
        MOV      r0,r4
        MOV      r1,r5
        POP      {r4-r6,pc}
        ENDP

|L5.36|
        DCD      calc_backup

        AREA ||i.findop||, CODE, READONLY, ALIGN=1

findop PROC
        PUSH     {r4-r10,lr}
        MOV      r5,r0
        MOV      r7,#0xffffffff
        MOV      r9,r7
        MOV      r8,r7
        MOVS     r6,#0
        MOV      r10,r6
        MOV      r0,r5
        BL       strlen
        SUBS     r4,r0,#1
        B        |L6.112|
|L6.28|
        ADDS     r1,r5,r4
        LDRB     r0,[r1,#0]
        CMP      r0,#0x29
        BNE      |L6.40|
        ADD      r6,r6,#1
|L6.40|
        BNE      |L6.46|
        MOV      r10,#1
|L6.46|
        ADDS     r1,r5,r4
        LDRB     r0,[r1,#0]
        CMP      r0,#0x28
        BNE      |L6.58|
        SUB      r6,r6,#1
|L6.58|
        CBNZ     r6,|L6.108|
        LDRB     r0,[r5,r4]
        CMP      r0,#0x2d
        BNE      |L6.92|
        SUBS     r0,r4,#1
        LDRB     r0,[r5,r0]
        CMP      r0,#0x29
        BEQ      |L6.82|
        SUBS     r0,r4,#1
        LDRB     r0,[r5,r0]
        CMP      r0,#0x30
        BLT      |L6.90|
|L6.82|
        SUBS     r0,r4,#1
        LDRB     r0,[r5,r0]
        CMP      r0,#0x39
        BLE      |L6.92|
|L6.90|
        B        |L6.110|
|L6.92|
        LDRB     r0,[r5,r4]
        BL       oprank
        MOV      r8,r0
        CMP      r8,r9
        BLE      |L6.108|
        MOV      r7,r4
        MOV      r9,r8
|L6.108|
        NOP      
|L6.110|
        SUBS     r4,r4,#1
|L6.112|
        CMP      r4,#0
        BGE      |L6.28|
        ADDS     r0,r7,#1
        CBNZ     r0,|L6.130|
        CMP      r10,#1
        BNE      |L6.130|
        MVN      r7,#1
|L6.130|
        MOV      r0,r7
        POP      {r4-r10,pc}
        ENDP


        AREA ||i.oprank||, CODE, READONLY, ALIGN=1

oprank PROC
        MOV      r1,r0
        MOV      r0,#0xffffffff
        CMP      r1,#0x2b
        BNE      |L7.12|
        B        |L7.74|
|L7.12|
        CMP      r1,#0x2d
        BNE      |L7.18|
        B        |L7.74|
|L7.18|
        CMP      r1,#0x2a
        BNE      |L7.24|
        B        |L7.80|
|L7.24|
        CMP      r1,#0x2f
        BNE      |L7.30|
        B        |L7.80|
|L7.30|
        CMP      r1,#0x25
        BNE      |L7.36|
        B        |L7.80|
|L7.36|
        CMP      r1,#0x63
        BNE      |L7.42|
        B        |L7.86|
|L7.42|
        CMP      r1,#0x73
        BNE      |L7.48|
        B        |L7.86|
|L7.48|
        CMP      r1,#0x74
        BNE      |L7.54|
        B        |L7.86|
|L7.54|
        CMP      r1,#0x70
        BNE      |L7.60|
        B        |L7.86|
|L7.60|
        CMP      r1,#0x6c
        BNE      |L7.66|
        B        |L7.86|
|L7.66|
        CMP      r1,#0x78
        BNE      |L7.72|
        B        |L7.92|
|L7.72|
        B        |L7.98|
|L7.74|
        MOV      r0,#4
        B        |L7.98|
|L7.80|
        MOV      r0,#3
        B        |L7.98|
|L7.86|
        MOV      r0,#2
        B        |L7.98|
|L7.92|
        MOV      r0,#1
        NOP      
|L7.98|
        BX       lr
        ENDP


        AREA ||i.str2db||, CODE, READONLY, ALIGN=2

str2db PROC
        PUSH     {r0-r12,lr}
        MOV      r9,r0
        MOV      r11,#0
        MOVS     r1,#0
        MOV      r7,r1
        MOV      r8,r1
        MOV      r5,r1
        MOV      r6,r1
        MOV      r10,r1
        MOVS     r4,#0
        B        |L8.102|
|L8.26|
        ADD      r10,r10,#1
        LDRB     r0,[r9,r4]
        CMP      r0,#0x2d
        BNE      |L8.44|
        MOV      r11,#1
        B        |L8.100|
|L8.44|
        LDRB     r0,[r9,r4]
        CMP      r0,#0x2e
        BNE      |L8.54|
        B        |L8.112|
|L8.54|
        LDRB     r1,[r9,r4]
        SUB      r0,r1,#0x30
        BL       __aeabi_i2d
        MOVS     r2,#0
        LDR      r3,|L8.208|
        STRD     r0,r1,[sp,#8]
        MOV      r0,r7
        MOV      r1,r8
        BL       __aeabi_dmul
        STRD     r0,r1,[sp,#0]
        LDRD     r2,r3,[sp,#8]
        BL       __aeabi_dadd
        MOV      r7,r0
        MOV      r8,r1
        NOP      
|L8.100|
        ADDS     r4,r4,#1
|L8.102|
        MOV      r0,r9
        BL       strlen
        CMP      r0,r4
        BHI      |L8.26|
|L8.112|
        NOP      
        MOV      r0,r9
        BL       strlen
        SUBS     r4,r0,#1
        B        |L8.166|
|L8.124|
        LDRB     r1,[r9,r4]
        SUB      r0,r1,#0x30
        BL       __aeabi_i2d
        MOV      r2,r5
        MOV      r3,r6
        STRD     r0,r1,[sp,#0]
        BL       __aeabi_dadd
        MOVS     r2,#0
        LDR      r3,|L8.208|
        STRD     r0,r1,[sp,#8]
        BL       __aeabi_ddiv
        MOV      r5,r0
        MOV      r6,r1
        SUBS     r4,r4,#1
|L8.166|
        CMP      r4,r10
        BGE      |L8.124|
        MOV      r2,r7
        MOV      r3,r8
        MOV      r0,r5
        MOV      r1,r6
        BL       __aeabi_dadd
        MOV      r5,r0
        MOV      r6,r1
        CMP      r11,#0
        BEQ      |L8.196|
        EOR      r6,r6,#0x80000000
|L8.196|
        MOV      r0,r5
        MOV      r1,r6
        ADD      sp,sp,#0x10
        POP      {r4-r12,pc}
        ENDP

        DCW      0x0000
|L8.208|
        DCD      0x40240000

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=0

calc_buffer
        %        100
calc_backup
        %        100

        AREA ||.data||, DATA, ALIGN=3

calc_error_flag
        DCB      0x00,0x00,0x00,0x00
        DCD      0x00000000
ANSWER
        DCFD     0x0000000000000000 ; 0
Newtown_outflag
        DCB      0x00

        EXPORT Newtown [CODE]
        EXPORT Newtown_5 [CODE]
        EXPORT calc [CODE]
        EXPORT df_eval [CODE]
        EXPORT eval [CODE]
        EXPORT eval_safe [CODE]
        EXPORT oprank [CODE]
        EXPORT str2db [CODE]
        EXPORT calc_buffer [DATA,SIZE=100]
        EXPORT calc_backup [DATA,SIZE=100]
        EXPORT calc_error_flag [DATA,SIZE=1]
        EXPORT ANSWER [DATA,SIZE=8]
        EXPORT Newtown_outflag [DATA,SIZE=1]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_dadd [CODE]
        IMPORT __aeabi_dsub [CODE]
        IMPORT __aeabi_dmul [CODE]
        IMPORT __aeabi_cdcmpeq [CODE]
        IMPORT __aeabi_ddiv [CODE]
        IMPORT __aeabi_d2iz [CODE]
        IMPORT __aeabi_i2d [CODE]
        IMPORT pow [CODE]
        IMPORT __aeabi_cdcmple [CODE]
        IMPORT log [CODE]
        IMPORT ||cos|| [CODE]
        IMPORT ||sin|| [CODE]
        IMPORT tan [CODE]
        IMPORT strlen [CODE]
        IMPORT strcpy [CODE]
        IMPORT __aeabi_drsub [CODE]

        KEEP findop

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
