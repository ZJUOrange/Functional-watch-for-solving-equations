; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--split_sections --debug -c -S -o..\obj\drawcalc.s --depend=..\obj\drawcalc.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\HARDWARE\LED -I..\HARDWARE\BEEP -I..\HARDWARE\KEY -I..\HARDWARE\EXTI -I..\HARDWARE\WDG -I..\HARDWARE\TIMER -I..\HARDWARE\TPAD -I..\HARDWARE\OLED -I..\HARDWARE\LCD -I..\HARDWARE\RTC -I..\HARDWARE\WKUP -I..\HARDWARE\ADC -I..\HARDWARE\LSENS -I..\HARDWARE\DAC -I..\HARDWARE\DMA -I..\HARDWARE\24CXX -I..\HARDWARE\SPI -I..\HARDWARE\W25QXX -I..\HARDWARE\RS485 -I..\HARDWARE\CAN -I..\HARDWARE\TOUCH -I..\HARDWARE\REMOTE -I..\HARDWARE\JOYPAD -I..\HARDWARE\DS18B20 -I..\HARDWARE\DHT11 -I..\HARDWARE\MPU6050 -I..\HARDWARE\MPU6050\eMPL -I..\HARDWARE\NRF24L01 -I..\HARDWARE\STMFLASH -I..\HARDWARE\OV7725 -I..\HARDWARE\SRAM -I..\HARDWARE\SDIO -I..\HARDWARE\SPBLCD -I..\HARDWARE\USART3 -I..\HARDWARE\SIM900A -I..\FATFS\src -I..\FATFS\exfuns -I..\USMART -I..\MALLOC -I..\TEXT -I..\PICTURE -I..\APP -I..\UCOSII\CORE -I..\UCOSII\PORT -I..\UCOSII\CONFIG -I..\GUI -I..\T9INPUT -I..\ATKNCR -I..\USB\CONFIG -I..\USB\STM32_USB-FS-Device_Driver\inc -I..\BACKGROUND -I..\MENU -I..\COLORSET -I..\SIMPLESYS -I..\TIMESET -I..\NEWTOU -I..\TIME -I..\DRAW -I..\calc -I..\DRAWCALC -I..\PICTUREDRAW -I.\RTE\_Target_1 -IC:\Users\86188\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.1.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=529 -DSTM32F10X_HD -DSTM32F10X_HD ..\DRAWCALC\drawcalc.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.buff_show||, CODE, READONLY, ALIGN=2

buff_show PROC
        PUSH     {r2-r6,lr}
        MOV      r6,r0
        MOV      r0,r6
        BL       strlen
        UXTB     r5,r0
        MOVS     r4,#0
        B        |L0.26|
|L0.16|
        MOVS     r0,#0
        LDR      r1,|L0.528|
        STRB     r0,[r1,r4]
        ADDS     r0,r4,#1
        UXTB     r4,r0
|L0.26|
        CMP      r4,#0x64
        BLT      |L0.16|
        MOVS     r4,#0
        B        |L0.44|
|L0.34|
        MOVS     r0,#0
        LDR      r1,|L0.532|
        STRB     r0,[r1,r4]
        ADDS     r0,r4,#1
        UXTB     r4,r0
|L0.44|
        CMP      r4,#0x13
        BLT      |L0.34|
        MOVS     r4,#0
        B        |L0.406|
|L0.52|
        LDRB     r0,[r6,r4]
        CMP      r0,#0x34
        BEQ      |L0.276|
        BGT      |L0.88|
        SUB      r0,r0,#0x25
        CMP      r0,#0xf
|L0.66|
        BCS      |L0.296|
        TBB      [pc,r0]
        DCB      0x9e,0xa3,0xa3,0x3a
        DCB      0x3f,0x8f,0x85,0xa3
        DCB      0x8a,0x99,0x94,0x52
        DCB      0x57,0x5c,0x61,0x00
|L0.88|
        CMP      r0,#0x63
        BEQ      |L0.148|
        BGT      |L0.112|
        SUB      r0,r0,#0x35
        CMP      r0,#5
        BCS      |L0.66|
        TBB      [pc,r0]
        DCB      0x5a,0x60
        DCB      0x65,0x6a,0x6f,0x00
|L0.112|
        CMP      r0,#0x73
        BEQ      |L0.138|
        BGT      |L0.128|
        CMP      r0,#0x6c
        BEQ      |L0.168|
        CMP      r0,#0x70
|L0.124|
        BNE      |L0.296|
        B        |L0.178|
|L0.128|
        CMP      r0,#0x74
        BEQ      |L0.158|
        CMP      r0,#0x78
        BNE      |L0.124|
        B        |L0.208|
|L0.138|
        ADR      r1,|L0.536|
        LDR      r0,|L0.528|
        BL       strcat
        B        |L0.400|
|L0.148|
        ADR      r1,|L0.540|
        LDR      r0,|L0.528|
        BL       strcat
        B        |L0.400|
|L0.158|
        ADR      r1,|L0.544|
        LDR      r0,|L0.528|
        BL       strcat
        B        |L0.400|
|L0.168|
        ADR      r1,|L0.548|
        LDR      r0,|L0.528|
        BL       strcat
        B        |L0.400|
|L0.178|
        ADR      r1,|L0.552|
        LDR      r0,|L0.528|
        BL       strcat
        B        |L0.400|
        ADR      r1,|L0.556|
        LDR      r0,|L0.528|
        BL       strcat
        B        |L0.400|
        ADR      r1,|L0.560|
        LDR      r0,|L0.528|
        BL       strcat
        B        |L0.400|
|L0.208|
        LDR      r0,|L0.528|
        BL       strlen
        SUBS     r0,r0,#1
        LDR      r1,|L0.528|
        MOVS     r2,#0
        STRB     r2,[r1,r0]
        ADR      r1,|L0.564|
        LDR      r0,|L0.528|
        BL       strcat
        ADDS     r0,r4,#1
        UXTB     r4,r0
        B        |L0.400|
        ADR      r1,|L0.568|
        LDR      r0,|L0.528|
        BL       strcat
        B        |L0.400|
        ADR      r1,|L0.572|
        LDR      r0,|L0.528|
        BL       strcat
        B        |L0.400|
        ADR      r1,|L0.576|
        LDR      r0,|L0.528|
        BL       strcat
        B        |L0.400|
        ADR      r1,|L0.580|
        LDR      r0,|L0.528|
        BL       strcat
        B        |L0.400|
|L0.276|
        ADR      r1,|L0.584|
        LDR      r0,|L0.528|
        BL       strcat
        B        |L0.400|
        ADR      r1,|L0.588|
        LDR      r0,|L0.528|
        BL       strcat
        B        |L0.400|
|L0.296|
        B        |L0.398|
        ADR      r1,|L0.592|
        LDR      r0,|L0.528|
        BL       strcat
        B        |L0.400|
        ADR      r1,|L0.596|
        LDR      r0,|L0.528|
        BL       strcat
        B        |L0.400|
        ADR      r1,|L0.600|
        LDR      r0,|L0.528|
        BL       strcat
        B        |L0.400|
        ADR      r1,|L0.604|
        LDR      r0,|L0.528|
        BL       strcat
        B        |L0.400|
        ADR      r1,|L0.608|
        LDR      r0,|L0.528|
        BL       strcat
        B        |L0.400|
        ADR      r1,|L0.612|
        LDR      r0,|L0.528|
        BL       strcat
        B        |L0.400|
        ADR      r1,|L0.616|
        LDR      r0,|L0.528|
        BL       strcat
        B        |L0.400|
        ADR      r1,|L0.620|
        LDR      r0,|L0.528|
        BL       strcat
        B        |L0.400|
        ADR      r1,|L0.624|
        LDR      r0,|L0.528|
        BL       strcat
        B        |L0.400|
        ADR      r1,|L0.628|
        LDR      r0,|L0.528|
        BL       strcat
        B        |L0.400|
|L0.398|
        NOP      
|L0.400|
        NOP      
        ADDS     r0,r4,#1
        UXTB     r4,r0
|L0.406|
        CMP      r4,r5
        BLT      |L0.52|
        LDR      r0,|L0.528|
        BL       strlen
        UXTB     r5,r0
        CMP      r5,#0x13
        BLT      |L0.480|
        MOVS     r4,#0
        B        |L0.474|
|L0.428|
        SUB      r0,r5,#0x12
        ADD      r0,r0,r4
        LDR      r1,|L0.528|
        LDRB     r0,[r1,r0]
        LDR      r1,|L0.532|
        STRB     r0,[r1,r4]
        ADR      r1,|L0.632|
        LDR      r0,|L0.532|
        BL       strcat
        LDR      r0,|L0.532|
        MOVS     r1,#0x10
        MOVS     r3,#0x14
        MOVS     r2,#0x98
        STRD     r1,r0,[sp,#0]
        MOVS     r1,#0x28
        MOVS     r0,#0x2c
        BL       LCD_ShowString
        ADDS     r0,r4,#1
        UXTB     r4,r0
|L0.474|
        CMP      r4,#0x12
        BLT      |L0.428|
        B        |L0.524|
|L0.480|
        MOVS     r4,#0
        B        |L0.496|
|L0.484|
        ADR      r1,|L0.632|
        LDR      r0,|L0.528|
        BL       strcat
        ADDS     r0,r4,#1
        UXTB     r4,r0
|L0.496|
        RSB      r0,r5,#0x13
        CMP      r0,r4
        BGT      |L0.484|
        LDR      r0,|L0.528|
        MOVS     r1,#0x10
        MOVS     r3,#0x14
        MOVS     r2,#0x98
        STRD     r1,r0,[sp,#0]
        MOVS     r1,#0x28
        MOVS     r0,#0x2c
        BL       LCD_ShowString
|L0.524|
        POP      {r2-r6,pc}
        ENDP

        DCW      0x0000
|L0.528|
        DCD      calc_str
|L0.532|
        DCD      long_str
|L0.536|
        DCB      "sin",0
|L0.540|
        DCB      "cos",0
|L0.544|
        DCB      "tan",0
|L0.548|
        DCB      "log",0
|L0.552|
        DCB      "^",0
        DCB      0
        DCB      0
|L0.556|
        DCB      "(",0
        DCB      0
        DCB      0
|L0.560|
        DCB      ")",0
        DCB      0
        DCB      0
|L0.564|
        DCB      "x",0
        DCB      0
        DCB      0
|L0.568|
        DCB      "0",0
        DCB      0
        DCB      0
|L0.572|
        DCB      "1",0
        DCB      0
        DCB      0
|L0.576|
        DCB      "2",0
        DCB      0
        DCB      0
|L0.580|
        DCB      "3",0
        DCB      0
        DCB      0
|L0.584|
        DCB      "4",0
        DCB      0
        DCB      0
|L0.588|
        DCB      "5",0
        DCB      0
        DCB      0
|L0.592|
        DCB      "6",0
        DCB      0
        DCB      0
|L0.596|
        DCB      "7",0
        DCB      0
        DCB      0
|L0.600|
        DCB      "8",0
        DCB      0
        DCB      0
|L0.604|
        DCB      "9",0
        DCB      0
        DCB      0
|L0.608|
        DCB      "+",0
        DCB      0
        DCB      0
|L0.612|
        DCB      "-",0
        DCB      0
        DCB      0
|L0.616|
        DCB      "*",0
        DCB      0
        DCB      0
|L0.620|
        DCB      "/",0
        DCB      0
        DCB      0
|L0.624|
        DCB      ".",0
        DCB      0
        DCB      0
|L0.628|
        DCB      "%",0
        DCB      0
        DCB      0
|L0.632|
        DCB      " ",0
        DCB      0
        DCB      0

        AREA ||i.calc_delete||, CODE, READONLY, ALIGN=1

calc_delete PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r0,r4
        BL       strlen
        UXTB     r5,r0
        SUBS     r0,r5,#1
        LDRB     r0,[r4,r0]
        CMP      r0,#0x29
        BNE      |L1.36|
        SUBS     r0,r5,#2
        LDRB     r0,[r4,r0]
        CMP      r0,#0x78
        BNE      |L1.42|
        MOVS     r1,#0
        SUBS     r0,r5,#3
        STRB     r1,[r4,r0]
        B        |L1.42|
|L1.36|
        MOVS     r1,#0
        SUBS     r0,r5,#1
        STRB     r1,[r4,r0]
|L1.42|
        MOVS     r0,#0
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.calc_draw_button||, CODE, READONLY, ALIGN=2

calc_draw_button PROC
        PUSH     {r2-r10,lr}
        MOV      r5,r0
        MOV      r6,r1
        MOV      r10,r2
        MOV      r9,#0
        MOVS     r4,#0
        LDR      r0,|L2.1036|
        LDRB     r0,[r0,#0]  ; calc_init_flag
        CMP      r0,#0
        BNE      |L2.276|
        MOV      r0,#0xffff
        BL       LCD_Clear
        MOVS     r0,#1
        MOVS     r1,#0xf0
        MOV      r3,r1
        MOVS     r2,#0
        STRD     r1,r0,[sp,#0]
        MOV      r1,r2
        ADR      r0,|L2.1040|
        BL       picture_play
        LDR      r0,|L2.1064|
        BL       buff_show
        LDR      r0,|L2.1068|
        LDRB     r0,[r0,#0]  ; mode_flag
        BL       mode_show
        ADR      r0,|L2.1072|
        MOVS     r1,#0x10
        MOVS     r3,#0x14
        MOVS     r2,#0x98
        STRD     r1,r0,[sp,#0]
        MOVS     r1,#0x38
        MOVS     r0,#0x2c
        BL       LCD_ShowString
        MOVS     r0,#2
        MOVS     r1,#0
        ADD      r2,r6,#0x37
        STRD     r1,r0,[sp,#0]
        UXTH     r1,r2
        ADD      r2,r5,#0x14
        UXTH     r0,r2
        MOVS     r3,#0x1e
        MOVS     r2,#0x28
        BL       btn_creat
        LDR      r1,|L2.1092|
        STR      r0,[r1,#0]  ; calc_button
        MOVS     r0,#2
        MOVS     r1,#0
        ADD      r2,r6,#0x37
        STRD     r1,r0,[sp,#0]
        UXTH     r1,r2
        ADD      r2,r5,#0x3c
        UXTH     r0,r2
        MOVS     r3,#0x1e
        MOVS     r2,#0x28
        BL       btn_creat
        LDR      r1,|L2.1092|
        STR      r0,[r1,#4]  ; calc_button
        MOVS     r0,#2
        MOVS     r1,#0
        ADD      r2,r6,#0x37
        STRD     r1,r0,[sp,#0]
        UXTH     r1,r2
        ADD      r2,r5,#0x64
        UXTH     r0,r2
        MOVS     r3,#0x1e
        MOVS     r2,#0x28
        BL       btn_creat
        LDR      r1,|L2.1092|
        STR      r0,[r1,#8]  ; calc_button
        MOVS     r0,#2
        MOVS     r1,#0
        ADD      r2,r6,#0x37
        STRD     r1,r0,[sp,#0]
        UXTH     r1,r2
        ADD      r2,r5,#0x8c
        UXTH     r0,r2
        MOVS     r3,#0x1e
        MOVS     r2,#0x28
        BL       btn_creat
        LDR      r1,|L2.1092|
        STR      r0,[r1,#0xc]  ; calc_button
        MOVS     r0,#2
        MOVS     r1,#0
        ADD      r2,r6,#0x37
        STRD     r1,r0,[sp,#0]
        UXTH     r1,r2
        ADD      r2,r5,#0xb4
        UXTH     r0,r2
        MOVS     r3,#0x1e
        MOVS     r2,#0x28
        BL       btn_creat
        LDR      r1,|L2.1092|
        STR      r0,[r1,#0x10]  ; calc_button
        MOVS     r0,#2
        MOVS     r1,#0
        ADD      r2,r6,#0x55
        STRD     r1,r0,[sp,#0]
        UXTH     r1,r2
        ADD      r2,r5,#0x14
        UXTH     r0,r2
        MOVS     r3,#0x1e
        MOVS     r2,#0x28
        BL       btn_creat
        B        |L2.278|
|L2.276|
        B        |L2.1034|
|L2.278|
        LDR      r1,|L2.1092|
        STR      r0,[r1,#0x14]  ; calc_button
        MOVS     r0,#2
        MOVS     r1,#0
        ADD      r2,r6,#0x55
        STRD     r1,r0,[sp,#0]
        UXTH     r1,r2
        ADD      r2,r5,#0x3c
        UXTH     r0,r2
        MOVS     r3,#0x1e
        MOVS     r2,#0x28
        BL       btn_creat
        LDR      r1,|L2.1092|
        STR      r0,[r1,#0x18]  ; calc_button
        MOVS     r0,#2
        MOVS     r1,#0
        ADD      r2,r6,#0x55
        STRD     r1,r0,[sp,#0]
        UXTH     r1,r2
        ADD      r2,r5,#0x64
        UXTH     r0,r2
        MOVS     r3,#0x1e
        MOVS     r2,#0x28
        BL       btn_creat
        LDR      r1,|L2.1092|
        STR      r0,[r1,#0x1c]  ; calc_button
        MOVS     r0,#2
        MOVS     r1,#0
        ADD      r2,r6,#0x55
        STRD     r1,r0,[sp,#0]
        UXTH     r1,r2
        ADD      r2,r5,#0x8c
        UXTH     r0,r2
        MOVS     r3,#0x1e
        MOVS     r2,#0x28
        BL       btn_creat
        LDR      r1,|L2.1092|
        STR      r0,[r1,#0x20]  ; calc_button
        MOVS     r0,#2
        MOVS     r1,#0
        ADD      r2,r6,#0x55
        STRD     r1,r0,[sp,#0]
        UXTH     r1,r2
        ADD      r2,r5,#0xb4
        UXTH     r0,r2
        MOVS     r3,#0x1e
        MOVS     r2,#0x28
        BL       btn_creat
        LDR      r1,|L2.1092|
        STR      r0,[r1,#0x24]  ; calc_button
        MOVS     r0,#2
        MOVS     r1,#0
        ADD      r2,r6,#0x73
        STRD     r1,r0,[sp,#0]
        UXTH     r1,r2
        ADD      r2,r5,#0x14
        UXTH     r0,r2
        MOVS     r3,#0x1e
        MOVS     r2,#0x28
        BL       btn_creat
        LDR      r1,|L2.1092|
        STR      r0,[r1,#0x28]  ; calc_button
        MOVS     r0,#2
        MOVS     r1,#0
        ADD      r2,r6,#0x73
        STRD     r1,r0,[sp,#0]
        UXTH     r1,r2
        ADD      r2,r5,#0x3c
        UXTH     r0,r2
        MOVS     r3,#0x1e
        MOVS     r2,#0x28
        BL       btn_creat
        LDR      r1,|L2.1092|
        STR      r0,[r1,#0x2c]  ; calc_button
        MOVS     r0,#2
        MOVS     r1,#0
        ADD      r2,r6,#0x73
        STRD     r1,r0,[sp,#0]
        UXTH     r1,r2
        ADD      r2,r5,#0x64
        UXTH     r0,r2
        MOVS     r3,#0x1e
        MOVS     r2,#0x28
        BL       btn_creat
        LDR      r1,|L2.1092|
        STR      r0,[r1,#0x30]  ; calc_button
        MOVS     r0,#2
        MOVS     r1,#0
        ADD      r2,r6,#0x73
        STRD     r1,r0,[sp,#0]
        UXTH     r1,r2
        ADD      r2,r5,#0x8c
        UXTH     r0,r2
        MOVS     r3,#0x1e
        MOVS     r2,#0x28
        BL       btn_creat
        LDR      r1,|L2.1092|
        STR      r0,[r1,#0x34]  ; calc_button
        MOVS     r0,#2
        MOVS     r1,#0
        ADD      r2,r6,#0x73
        STRD     r1,r0,[sp,#0]
        UXTH     r1,r2
        ADD      r2,r5,#0xb4
        UXTH     r0,r2
        MOVS     r3,#0x1e
        MOVS     r2,#0x28
        BL       btn_creat
        LDR      r1,|L2.1092|
        STR      r0,[r1,#0x38]  ; calc_button
        MOVS     r0,#2
        MOVS     r1,#0
        ADD      r2,r6,#0x91
        STRD     r1,r0,[sp,#0]
        UXTH     r1,r2
        ADD      r2,r5,#0x3c
        UXTH     r0,r2
        MOVS     r3,#0x1e
        MOVS     r2,#0x28
        BL       btn_creat
        LDR      r1,|L2.1092|
        STR      r0,[r1,#0x3c]  ; calc_button
        MOVS     r0,#2
        MOVS     r1,#0
        ADD      r2,r6,#0x91
        STRD     r1,r0,[sp,#0]
        UXTH     r1,r2
        ADD      r2,r5,#0x64
        UXTH     r0,r2
        MOVS     r3,#0x1e
        MOVS     r2,#0x28
        BL       btn_creat
        LDR      r1,|L2.1092|
        STR      r0,[r1,#0x40]  ; calc_button
        MOVS     r0,#2
        MOVS     r1,#0
        ADD      r2,r6,#0x91
        STRD     r1,r0,[sp,#0]
        UXTH     r1,r2
        ADD      r2,r5,#0x8c
        UXTH     r0,r2
        MOVS     r3,#0x1e
        MOVS     r2,#0x28
        BL       btn_creat
        LDR      r1,|L2.1092|
        STR      r0,[r1,#0x44]  ; calc_button
        MOVS     r0,#2
        MOVS     r1,#0
        ADD      r2,r6,#0xaf
        STRD     r1,r0,[sp,#0]
        UXTH     r1,r2
        ADD      r2,r5,#0x5a
        UXTH     r0,r2
        MOVS     r3,#0x1e
        MOVS     r2,#0x3c
        BL       btn_creat
        LDR      r1,|L2.1092|
        STR      r0,[r1,#0x48]  ; calc_button
        NOP      
        B        |L2.1018|
|L2.702|
        LDR      r1,|L2.1092|
        LDR      r0,[r1,r4,LSL #2]
        BL       calc_init
        CBNZ     r4,|L2.726|
        ADR      r0,|L2.1096|
        LDR      r1,|L2.1092|
        LDR      r1,[r1,r4,LSL #2]
        STR      r0,[r1,#0xb]
|L2.726|
        CMP      r4,#1
        BNE      |L2.742|
        ADR      r0,|L2.1100|
        LDR      r1,|L2.1092|
        LDR      r1,[r1,r4,LSL #2]
        STR      r0,[r1,#0xb]
|L2.742|
        CMP      r4,#2
        BNE      |L2.758|
        ADR      r0,|L2.1104|
        LDR      r1,|L2.1092|
        LDR      r1,[r1,r4,LSL #2]
        STR      r0,[r1,#0xb]
|L2.758|
        CMP      r4,#3
        BNE      |L2.774|
        ADR      r0,|L2.1108|
        LDR      r1,|L2.1092|
        LDR      r1,[r1,r4,LSL #2]
        STR      r0,[r1,#0xb]
|L2.774|
        CMP      r4,#4
        BNE      |L2.790|
        ADR      r0,|L2.1112|
        LDR      r1,|L2.1092|
        LDR      r1,[r1,r4,LSL #2]
        STR      r0,[r1,#0xb]
|L2.790|
        CMP      r4,#5
        BNE      |L2.806|
        ADR      r0,|L2.1116|
        LDR      r1,|L2.1092|
        LDR      r1,[r1,r4,LSL #2]
        STR      r0,[r1,#0xb]
|L2.806|
        CMP      r4,#6
        BNE      |L2.822|
        ADR      r0,|L2.1120|
        LDR      r1,|L2.1092|
        LDR      r1,[r1,r4,LSL #2]
        STR      r0,[r1,#0xb]
|L2.822|
        CMP      r4,#7
        BNE      |L2.838|
        ADR      r0,|L2.1124|
        LDR      r1,|L2.1092|
        LDR      r1,[r1,r4,LSL #2]
        STR      r0,[r1,#0xb]
|L2.838|
        CMP      r4,#8
        BNE      |L2.854|
        ADR      r0,|L2.1128|
        LDR      r1,|L2.1092|
        LDR      r1,[r1,r4,LSL #2]
        STR      r0,[r1,#0xb]
|L2.854|
        CMP      r4,#9
        BNE      |L2.870|
        ADR      r0,|L2.1132|
        LDR      r1,|L2.1092|
        LDR      r1,[r1,r4,LSL #2]
        STR      r0,[r1,#0xb]
|L2.870|
        CMP      r4,#0xa
        BNE      |L2.886|
        ADR      r0,|L2.1136|
        LDR      r1,|L2.1092|
        LDR      r1,[r1,r4,LSL #2]
        STR      r0,[r1,#0xb]
|L2.886|
        CMP      r4,#0xb
        BNE      |L2.902|
        ADR      r0,|L2.1140|
        LDR      r1,|L2.1092|
        LDR      r1,[r1,r4,LSL #2]
        STR      r0,[r1,#0xb]
|L2.902|
        CMP      r4,#0xc
        BNE      |L2.918|
        ADR      r0,|L2.1144|
        LDR      r1,|L2.1092|
        LDR      r1,[r1,r4,LSL #2]
        STR      r0,[r1,#0xb]
|L2.918|
        CMP      r4,#0xd
        BNE      |L2.934|
        ADR      r0,|L2.1148|
        LDR      r1,|L2.1092|
        LDR      r1,[r1,r4,LSL #2]
        STR      r0,[r1,#0xb]
|L2.934|
        CMP      r4,#0xe
        BNE      |L2.950|
        ADR      r0,|L2.1152|
        LDR      r1,|L2.1092|
        LDR      r1,[r1,r4,LSL #2]
        STR      r0,[r1,#0xb]
|L2.950|
        CMP      r4,#0xf
        BNE      |L2.966|
        ADR      r0,|L2.1156|
        LDR      r1,|L2.1092|
        LDR      r1,[r1,r4,LSL #2]
        STR      r0,[r1,#0xb]
|L2.966|
        CMP      r4,#0x10
        BNE      |L2.982|
        ADR      r0,|L2.1160|
        LDR      r1,|L2.1092|
        LDR      r1,[r1,r4,LSL #2]
        STR      r0,[r1,#0xb]
|L2.982|
        CMP      r4,#0x11
        BNE      |L2.998|
        ADR      r0,|L2.1164|
        LDR      r1,|L2.1092|
        LDR      r1,[r1,r4,LSL #2]
        STR      r0,[r1,#0xb]
|L2.998|
        CMP      r4,#0x12
        BNE      |L2.1014|
        ADR      r0,|L2.1168|
        LDR      r1,|L2.1092|
        LDR      r1,[r1,r4,LSL #2]
        STR      r0,[r1,#0xb]
|L2.1014|
        ADDS     r0,r4,#1
        UXTB     r4,r0
|L2.1018|
        CMP      r4,#0x13
        BLT      |L2.702|
        BL       tou_dev_clear
        MOVS     r0,#1
        LDR      r1,|L2.1036|
        STRB     r0,[r1,#0]
|L2.1034|
        B        |L2.1176|
|L2.1036|
        DCD      calc_init_flag
|L2.1040|
        DCB      "0:PICTURE/calc_bgd.bmp",0
        DCB      0
|L2.1064|
        DCD      calc_buffer
|L2.1068|
        DCD      mode_flag
|L2.1072|
        DCB      "                   ",0
|L2.1092|
        DCD      calc_button
|L2.1096|
        DCB      "1/M",0
|L2.1100|
        DCB      "2/l",0
|L2.1104|
        DCB      "3/^",0
|L2.1108|
        DCB      "+",0
        DCB      0
        DCB      0
|L2.1112|
        DCB      "D/C",0
|L2.1116|
        DCB      "4/s",0
|L2.1120|
        DCB      "5/c",0
|L2.1124|
        DCB      "6/t",0
|L2.1128|
        DCB      "-",0
        DCB      0
        DCB      0
|L2.1132|
        DCB      "x",0
        DCB      0
        DCB      0
|L2.1136|
        DCB      "7/(",0
|L2.1140|
        DCB      "8/)",0
|L2.1144|
        DCB      "9/%",0
|L2.1148|
        DCB      "*",0
        DCB      0
        DCB      0
|L2.1152|
        DCB      "=",0
        DCB      0
        DCB      0
|L2.1156|
        DCB      "0",0
        DCB      0
        DCB      0
|L2.1160|
        DCB      ".",0
        DCB      0
        DCB      0
|L2.1164|
        DCB      "/",0
        DCB      0
        DCB      0
|L2.1168|
        DCB      "shif"
|L2.1172|
        DCB      "t",0
        DCB      0
        DCB      0
|L2.1176|
        BL       touch_scan
        MOVS     r0,#0x32
        BL       delay_ms
        BL       twinkle
        MOVS     r4,#0
        B        |L2.1798|
|L2.1194|
        LDR      r2,|L2.1852|
        LDRB     r1,[r2,#8]  ; tou_dev
        LDR      r2,|L2.1856|
        LDR      r0,[r2,r4,LSL #2]
        BL       simple_btn_check
        MOV      r9,r0
        CMP      r9,#0x20
|L2.1214|
        BNE      |L2.1440|
        LDR      r0,|L2.1860|
        LDRB     r0,[r0,#0]  ; shift_flag
        CMP      r0,#0
        BNE      |L2.1214|
        CMP      r4,#0x13
        BCS      |L2.1442|
        TBB      [pc,r4]
        DCB      0x0a,0x0f,0x14,0x19
        DCB      0x1f,0x23,0x28,0x2d
        DCB      0x32,0x38,0x3d,0x42
        DCB      0x47,0x4c,0x52,0x84
        DCB      0x8a,0x90,0x96,0x00
        ADR      r1,|L2.1864|
        LDR      r0,|L2.1868|
        BL       strcat
        B        |L2.1556|
        ADR      r1,|L2.1872|
        LDR      r0,|L2.1868|
        BL       strcat
        B        |L2.1556|
        ADR      r1,|L2.1876|
        LDR      r0,|L2.1868|
        BL       strcat
        B        |L2.1556|
        ADR      r1,|L2.1108|
        LDR      r0,|L2.1868|
        BL       strcat
        B        |L2.1556|
        LDR      r0,|L2.1868|
        BL       calc_delete
        B        |L2.1556|
        ADR      r1,|L2.1880|
        LDR      r0,|L2.1868|
        BL       strcat
        B        |L2.1556|
        ADR      r1,|L2.1884|
        LDR      r0,|L2.1868|
        BL       strcat
        B        |L2.1556|
        ADR      r1,|L2.1888|
        LDR      r0,|L2.1868|
        BL       strcat
        B        |L2.1556|
        ADR      r1,|L2.1128|
        LDR      r0,|L2.1868|
        BL       strcat
        B        |L2.1556|
        ADR      r1,|L2.1892|
        LDR      r0,|L2.1868|
        BL       strcat
        B        |L2.1556|
        ADR      r1,|L2.1896|
        LDR      r0,|L2.1868|
        BL       strcat
        B        |L2.1556|
        ADR      r1,|L2.1900|
        LDR      r0,|L2.1868|
        BL       strcat
        B        |L2.1556|
        ADR      r1,|L2.1904|
        LDR      r0,|L2.1868|
        BL       strcat
        B        |L2.1556|
        ADR      r1,|L2.1148|
        LDR      r0,|L2.1868|
        BL       strcat
        B        |L2.1556|
        MOVS     r0,#0
        LDR      r1,|L2.1908|
        STRB     r0,[r1,#0]
        LDR      r0,|L2.1912|
        LDRB     r0,[r0,#0]  ; mode_flag
        CBZ      r0,|L2.1444|
        MOVS     r2,#0
        LDR      r3,|L2.1916|
        LDR      r1,|L2.1920|
        LDM      r1,{r0,r1}
        BL       __aeabi_dsub
        STRD     r0,r1,[sp,#0]
        LDR      r0,|L2.1920|
        LDM      r0!,{r2,r3}
        MOV      r0,r10
        BL       Newtown_5
        LDR      r2,|L2.1920|
        STM      r2!,{r0,r1}
        B        |L2.1458|
|L2.1440|
        B        |L2.1568|
|L2.1442|
        B        |L2.1554|
|L2.1444|
        LDR      r0,|L2.1920|
        LDM      r0!,{r2,r3}
        LDR      r0,|L2.1868|
        BL       eval_safe
        LDR      r2,|L2.1920|
        STM      r2!,{r0,r1}
|L2.1458|
        LDR      r0,|L2.1908|
        LDRB     r0,[r0,#0]  ; calc_error_flag
        CBNZ     r0,|L2.1474|
        LDR      r1,|L2.1920|
        LDM      r1,{r0,r1}
        BL       result_show
        B        |L2.1494|
|L2.1474|
        ADR      r0,|L2.1924|
        MOVS     r1,#0x10
        MOVS     r3,#0x14
        MOVS     r2,#0x98
        STRD     r1,r0,[sp,#0]
        MOVS     r1,#0x38
        MOVS     r0,#0x2c
        BL       LCD_ShowString
|L2.1494|
        B        |L2.1556|
        ADR      r1,|L2.1156|
        LDR      r0,|L2.1868|
        BL       strcat
        B        |L2.1556|
        ADR      r1,|L2.1160|
        LDR      r0,|L2.1868|
        BL       strcat
        B        |L2.1556|
        ADR      r1,|L2.1164|
        LDR      r0,|L2.1868|
        BL       strcat
        B        |L2.1556|
        MOVS     r0,#1
        LDR      r1,|L2.1860|
        STRB     r0,[r1,#0]
        MOV      r0,#0xfd20
        LDR      r1,|L2.1856|
        LDR      r1,[r1,#0x48]  ; calc_button
        LDR      r1,[r1,#0x15]
        STRH     r0,[r1,#4]
        B        |L2.1556|
|L2.1554|
        NOP      
|L2.1556|
        NOP      
        MOV      r9,#0
        LDR      r0,|L2.1868|
        BL       buff_show
|L2.1568|
        CMP      r9,#0x90
        BEQ      |L2.1588|
        LDR      r0,|L2.1860|
        LDRB     r0,[r0,#0]  ; shift_flag
        CMP      r0,#0
        BEQ      |L2.1794|
        CMP      r9,#0x20
        BNE      |L2.1794|
|L2.1588|
        BL       tou_dev_clear
        MOVS     r0,#0
        LDR      r1,|L2.1860|
        STRB     r0,[r1,#0]
        MOV      r0,#0xaaaa
        LDR      r1,|L2.1856|
        LDR      r1,[r1,#0x48]  ; calc_button
        LDR      r1,[r1,#0x15]
        STRH     r0,[r1,#4]
        CMP      r4,#0xd
        BCS      |L2.1784|
        TBB      [pc,r4]
        DCB      0x07,0x19,0x1e,0x52
        DCB      0x23,0x33,0x38,0x3d
        DCB      0x52,0x52,0x43,0x48
        DCB      0x4d,0x00
        LDR      r0,|L2.1912|
        LDRB     r0,[r0,#0]  ; mode_flag
        ADDS     r0,r0,#1
        LDR      r1,|L2.1912|
        STRB     r0,[r1,#0]
        LDRB     r0,[r1,#0]  ; mode_flag
        ADD      r1,r0,r0,LSR #31
        ASRS     r1,r1,#1
        SUB      r1,r0,r1,LSL #1
        LDR      r2,|L2.1912|
        STRB     r1,[r2,#0]
        MOV      r0,r2
        LDRB     r0,[r0,#0]  ; mode_flag
        BL       mode_show
        B        |L2.1786|
        ADR      r1,|L2.1944|
        LDR      r0,|L2.1868|
        BL       strcat
        B        |L2.1786|
        ADR      r1,|L2.1948|
        LDR      r0,|L2.1868|
        BL       strcat
        B        |L2.1786|
        LDR      r0,|L2.1868|
        ADR      r1,|L2.1952|
        LDRB     r1,[r1,#0]
        STRB     r1,[r0,#0]
        ADR      r0,|L2.1072|
        MOVS     r1,#0x10
        MOVS     r3,#0x14
        MOVS     r2,#0x98
        STRD     r1,r0,[sp,#0]
        MOVS     r1,#0x38
        MOVS     r0,#0x2c
        BL       LCD_ShowString
        B        |L2.1786|
        ADR      r1,|L2.1956|
        LDR      r0,|L2.1868|
        BL       strcat
        B        |L2.1786|
        ADR      r1,|L2.1960|
        LDR      r0,|L2.1868|
        BL       strcat
        B        |L2.1786|
        ADR      r1,|L2.1172|
        LDR      r0,|L2.1868|
        BL       strcat
        B        |L2.1786|
        ADR      r1,|L2.1964|
        LDR      r0,|L2.1868|
        BL       strcat
        B        |L2.1786|
        ADR      r1,|L2.1968|
        LDR      r0,|L2.1868|
        BL       strcat
        B        |L2.1786|
        ADR      r1,|L2.1972|
        LDR      r0,|L2.1868|
        BL       strcat
        B        |L2.1786|
|L2.1784|
        NOP      
|L2.1786|
        NOP      
        LDR      r0,|L2.1868|
        BL       buff_show
|L2.1794|
        ADDS     r0,r4,#1
        UXTB     r4,r0
|L2.1798|
        CMP      r4,#0x13
        BLT      |L2.1194|
        LDR      r0,|L2.1852|
        LDRB     r0,[r0,#8]  ; tou_dev
        CMP      r0,#0x82
        BNE      |L2.1844|
        MOVS     r4,#0
        B        |L2.1830|
|L2.1816|
        LDR      r1,|L2.1856|
        LDR      r0,[r1,r4,LSL #2]
        BL       btn_delete
        ADDS     r0,r4,#1
        UXTB     r4,r0
|L2.1830|
        CMP      r4,#0x12
        BLT      |L2.1816|
        MOVS     r0,#0
        LDR      r1,|L2.1976|
        STRB     r0,[r1,#0]
        BL       sys_return
|L2.1844|
        MOVS     r0,#0
        POP      {r2-r10,pc}
        ENDP

        DCW      0x0000
|L2.1852|
        DCD      tou_dev
|L2.1856|
        DCD      calc_button
|L2.1860|
        DCD      shift_flag
|L2.1864|
        DCB      "1",0
        DCB      0
        DCB      0
|L2.1868|
        DCD      calc_buffer
|L2.1872|
        DCB      "2",0
        DCB      0
        DCB      0
|L2.1876|
        DCB      "3",0
        DCB      0
        DCB      0
|L2.1880|
        DCB      "4",0
        DCB      0
        DCB      0
|L2.1884|
        DCB      "5",0
        DCB      0
        DCB      0
|L2.1888|
        DCB      "6",0
        DCB      0
        DCB      0
|L2.1892|
        DCB      "(x)",0
|L2.1896|
        DCB      "7",0
        DCB      0
        DCB      0
|L2.1900|
        DCB      "8",0
        DCB      0
        DCB      0
|L2.1904|
        DCB      "9",0
        DCB      0
        DCB      0
|L2.1908|
        DCD      calc_error_flag
|L2.1912|
        DCD      mode_flag
|L2.1916|
        DCD      0x3ff00000
|L2.1920|
        DCD      ANSWER
|L2.1924|
        DCB      "         Math Error",0
|L2.1944|
        DCB      "l",0
        DCB      0
        DCB      0
|L2.1948|
        DCB      "p",0
        DCB      0
        DCB      0
|L2.1952|
        DCB      0
        DCB      0
        DCB      0
        DCB      0
|L2.1956|
        DCB      "s",0
        DCB      0
        DCB      0
|L2.1960|
        DCB      "c",0
        DCB      0
        DCB      0
|L2.1964|
        DCB      "(",0
        DCB      0
        DCB      0
|L2.1968|
        DCB      ")",0
        DCB      0
        DCB      0
|L2.1972|
        DCB      "%",0
        DCB      0
        DCB      0
|L2.1976|
        DCD      calc_init_flag

        AREA ||i.calc_init||, CODE, READONLY, ALIGN=1

calc_init PROC
        MOV      r1,r0
        MOVS     r0,#0
        STRH     r0,[r1,#0x11]!
        MOV      r0,#0xffff
        STRH     r0,[r1,#2]
        MOV      r0,#0x453a
        LDR      r2,[r1,#4]
        STRH     r0,[r2,#0]
        MOV      r0,#0x5ddc
        LDR      r2,[r1,#4]
        STRH     r0,[r2,#2]
        MOV      r0,#0xaaaa
        LDR      r2,[r1,#4]
        STRH     r0,[r2,#4]
        MOV      r0,#0xfd20
        LDR      r2,[r1,#4]
        SUBS     r1,r1,#0x11
        STRH     r0,[r2,#6]
        MOVS     r0,#0
        BX       lr
        ENDP


        AREA ||i.mode_show||, CODE, READONLY, ALIGN=2

mode_show PROC
        PUSH     {r2-r4,lr}
        MOV      r4,r0
        CBZ      r4,|L4.12|
        CMP      r4,#1
        BNE      |L4.56|
        B        |L4.34|
|L4.12|
        ADR      r0,|L4.64|
        MOVS     r1,#0x10
        MOVS     r3,#0x14
        MOVS     r2,#0x58
        STRD     r1,r0,[sp,#0]
        MOVS     r1,#0xf
        MOVS     r0,#0x4c
        BL       LCD_ShowString
        B        |L4.58|
|L4.34|
        ADR      r0,|L4.76|
        MOVS     r1,#0x10
        MOVS     r3,#0x14
        MOVS     r2,#0x58
        STRD     r1,r0,[sp,#0]
        MOVS     r1,#0xf
        MOVS     r0,#0x4c
        BL       LCD_ShowString
        B        |L4.58|
|L4.56|
        NOP      
|L4.58|
        NOP      
        POP      {r2-r4,pc}
        ENDP

        DCW      0x0000
|L4.64|
        DCB      " calculate ",0
|L4.76|
        DCB      "solve for x",0

        AREA ||i.result_show||, CODE, READONLY, ALIGN=2

        REQUIRE _printf_percent
        REQUIRE _printf_d
        REQUIRE _printf_int_dec
        REQUIRE _printf_sizespec
        REQUIRE _printf_f
        REQUIRE _printf_fp_dec
result_show PROC
        PUSH     {r4-r11,lr}
        SUB      sp,sp,#0x44
        MOV      r4,r0
        MOV      r5,r1
        MOVS     r1,#0x20
        ADD      r0,sp,#0x20
        BL       __aeabi_memclr4
        MOVS     r1,#0x14
        ADD      r0,sp,#0xc
        BL       __aeabi_memclr4
        MOV      r0,r4
        MOV      r1,r5
        BL       __aeabi_d2iz
        STR      r0,[sp,#0x40]
        LDR      r0,[sp,#0x40]
        BL       __aeabi_ui2d
        MOV      r10,r0
        MOV      r2,r4
        MOV      r3,r5
        BL       __aeabi_drsub
        MOV      r7,r0
        LDR      r2,|L5.184|
        LDR      r3,|L5.188|
        BL       __aeabi_cdcmple
        BCS      |L5.104|
        LDR      r0,[sp,#0x40]
        BL       __aeabi_ui2d
        MOV      r7,r0
        MOV      r2,r4
        MOV      r3,r5
        BL       __aeabi_drsub
        MOV      r10,r0
        LDR      r2,|L5.184|
        LDR      r3,|L5.192|
        BL       __aeabi_cdrcmple
        BCS      |L5.104|
        ADR      r1,|L5.196|
        ADD      r0,sp,#0x20
        LDR      r2,[sp,#0x40]
        BL       __2sprintf
        B        |L5.116|
|L5.104|
        MOV      r2,r4
        MOV      r3,r5
        ADR      r1,|L5.200|
        ADD      r0,sp,#0x20
        BL       __2sprintf
|L5.116|
        ADD      r0,sp,#0x20
        BL       strlen
        AND      r9,r0,#0xff
        MOVS     r6,#0
        B        |L5.140|
|L5.130|
        MOVS     r0,#0x20
        ADD      r1,sp,#0xc
        STRB     r0,[r1,r6]
        ADDS     r0,r6,#1
        UXTB     r6,r0
|L5.140|
        RSB      r0,r9,#0x13
        CMP      r0,r6
        BGT      |L5.130|
        ADD      r1,sp,#0x20
        ADD      r0,sp,#0xc
        BL       strcat
        ADD      r0,sp,#0xc
        MOVS     r1,#0x10
        MOVS     r3,#0x14
        MOVS     r2,#0x98
        STRD     r1,r0,[sp,#0]
        MOVS     r1,#0x38
        MOVS     r0,#0x2c
        BL       LCD_ShowString
        ADD      sp,sp,#0x44
        POP      {r4-r11,pc}
        ENDP

        DCW      0x0000
|L5.184|
        DCD      0xa0b5ed8d
|L5.188|
        DCD      0x3eb0c6f7
|L5.192|
        DCD      0xbeb0c6f7
|L5.196|
        DCB      "%d",0
        DCB      0
|L5.200|
        DCB      "%lf",0

        AREA ||i.twinkle||, CODE, READONLY, ALIGN=2

twinkle PROC
        PUSH     {r2-r6,lr}
        LDR      r0,|L6.164|
        LDRB     r0,[r0,#0]  ; twinkle_cnt
        CMP      r0,#8
        BLE      |L6.152|
        LDR      r1,|L6.164|
        LDRB     r0,[r1,#0]  ; twinkle_cnt
        ASRS     r1,r0,#31
        ADD      r1,r0,r1,LSR #29
        ASRS     r1,r1,#3
        SUB      r1,r0,r1,LSL #3
        LDR      r2,|L6.164|
        STRB     r1,[r2,#0]
        LDR      r0,|L6.168|
        BL       strlen
        UXTB     r5,r0
        CMP      r5,#0x13
        BNE      |L6.86|
        LDR      r0,|L6.168|
        LDRB     r0,[r0,#0x12]  ; long_str
        CMP      r0,#0x20
        BNE      |L6.58|
        MOVS     r0,#0x5f
        LDR      r1,|L6.168|
        STRB     r0,[r1,#0x12]
        B        |L6.64|
|L6.58|
        MOVS     r0,#0x20
        LDR      r1,|L6.168|
        STRB     r0,[r1,#0x12]
|L6.64|
        LDR      r0,|L6.168|
        MOVS     r1,#0x10
        MOVS     r3,#0x14
        MOVS     r2,#0x98
        STRD     r1,r0,[sp,#0]
        MOVS     r1,#0x28
        MOVS     r0,#0x2c
        BL       LCD_ShowString
        B        |L6.152|
|L6.86|
        MOVS     r4,#0
        B        |L6.126|
|L6.90|
        LDR      r0,|L6.172|
        LDRB     r0,[r0,r4]
        CMP      r0,#0x20
        BNE      |L6.106|
        MOVS     r0,#0x5f
        LDR      r1,|L6.172|
        STRB     r0,[r1,r4]
        B        |L6.130|
|L6.106|
        LDR      r0,|L6.172|
        LDRB     r0,[r0,r4]
        CMP      r0,#0x5f
        BNE      |L6.122|
        MOVS     r0,#0x20
        LDR      r1,|L6.172|
        STRB     r0,[r1,r4]
        B        |L6.130|
|L6.122|
        ADDS     r0,r4,#1
        UXTB     r4,r0
|L6.126|
        CMP      r4,#0x13
        BLT      |L6.90|
|L6.130|
        NOP      
        LDR      r0,|L6.172|
        MOVS     r1,#0x10
        MOVS     r3,#0x14
        MOVS     r2,#0x98
        STRD     r1,r0,[sp,#0]
        MOVS     r1,#0x28
        MOVS     r0,#0x2c
        BL       LCD_ShowString
|L6.152|
        LDR      r0,|L6.164|
        LDRB     r0,[r0,#0]  ; twinkle_cnt
        ADDS     r0,r0,#1
        LDR      r1,|L6.164|
        STRB     r0,[r1,#0]
        POP      {r2-r6,pc}
        ENDP

|L6.164|
        DCD      twinkle_cnt
|L6.168|
        DCD      long_str
|L6.172|
        DCD      calc_str

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=2

calc_str
        %        200
long_str
        %        20
calc_button
        %        76

        AREA ||.data||, DATA, ALIGN=0

mode_flag
        DCB      0x00
twinkle_cnt
        DCB      0x00
shift_flag
        DCB      0x00
calc_init_flag
        DCB      0x00

        EXPORT buff_show [CODE]
        EXPORT calc_delete [CODE]
        EXPORT calc_draw_button [CODE]
        EXPORT calc_init [CODE]
        EXPORT mode_show [CODE]
        EXPORT result_show [CODE]
        EXPORT twinkle [CODE]
        EXPORT calc_str [DATA,SIZE=200]
        EXPORT long_str [DATA,SIZE=19]
        EXPORT mode_flag [DATA,SIZE=1]
        EXPORT twinkle_cnt [DATA,SIZE=1]
        EXPORT shift_flag [DATA,SIZE=1]
        EXPORT calc_init_flag [DATA,SIZE=1]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT strlen [CODE]
        IMPORT strcat [CODE]
        IMPORT LCD_ShowString [CODE]
        IMPORT __aeabi_memclr4 [CODE]
        IMPORT __aeabi_d2iz [CODE]
        IMPORT __aeabi_ui2d [CODE]
        IMPORT __aeabi_drsub [CODE]
        IMPORT __aeabi_cdcmple [CODE]
        IMPORT __aeabi_cdrcmple [CODE]
        IMPORT _printf_percent [CODE]
        IMPORT _printf_d [CODE]
        IMPORT _printf_int_dec [CODE]
        IMPORT __2sprintf [CODE]
        IMPORT _printf_sizespec [CODE]
        IMPORT _printf_f [CODE]
        IMPORT _printf_fp_dec [CODE]
        IMPORT LCD_Clear [CODE]
        IMPORT picture_play [CODE]
        IMPORT btn_creat [CODE]
        IMPORT tou_dev_clear [CODE]
        IMPORT touch_scan [CODE]
        IMPORT delay_ms [CODE]
        IMPORT simple_btn_check [CODE]
        IMPORT __aeabi_dsub [CODE]
        IMPORT Newtown_5 [CODE]
        IMPORT eval_safe [CODE]
        IMPORT btn_delete [CODE]
        IMPORT sys_return [CODE]
        IMPORT calc_buffer [DATA]
        IMPORT tou_dev [DATA]
        IMPORT calc_error_flag [DATA]
        IMPORT ANSWER [DATA]

        KEEP calc_button

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
